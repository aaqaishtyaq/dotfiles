# Configuration for Alacritty, the GPU enhanced terminal emulator.

env:
  TERM: alacritty

window:
  dimensions:
    columns: 140
    lines: 38
  padding:
    x: 10
    y: 10
  dynamic_padding: false
  decorations: full
  # startup_mode: Fullscreen
  dynamic_title: true

scrolling:
  history: 10000
  multiplier: 3

font:
  normal:
    family: BlexMono Nerd Font
    style: Book
  bold:
    family: BlexMono Nerd Font
    style: Bold
  italic:
    family: BlexMono Nerd Font
    style: Italic
  size: 14.0
  offset:
    x: 0
    y: 0
  glyph_offset:
    x: 0
    y: 0
  use_thin_strokes: true

draw_bold_text_with_bright_colors: false

schemes:
  dang: &dang
    primary:
      background: '#000000'
      foreground: '#ffffff'
    cursor:
      text: '#ffffff'
      cursor: '#6227ae'
    normal:
      black:   '#000000'
      red:     '#c92432'
      green:   '#2DBB54'
      yellow:  '#FFB835'
      blue:    '#5B8FFF'
      magenta: '#9340ff'
      cyan:    '#2ec7ff'
      white:   '#ffffff'
    bright:
      black:   '#5b5d61'
      red:     '#f42c3e'
      green:   '#7ec16e'
      yellow:  '#fe8019'
      blue:    '#82AAFF'
      magenta: '#ff6ac1'
      # cyan:    '#56b6c2'
      cyan:    '#00A5CF'
      white:   '#ffffff'

  darx: &darx
    primary:
      background: '#1d2021'
      foreground: '#bdae93'
    cursor:
      text: CellBackground
      cursor: CellForeground
    normal:
      black:   '#282828'
      red:     '#cc241d'
      green:   '#98971a'
      yellow:  '#d79921'
      blue:    '#458588'
      magenta: '#b16286'
      cyan:    '#689d6a'
      white:   '#a89984'
    bright:
      black:   '#928374'
      red:     '#f42c3e'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#99c6ca'
      magenta: '#d3869b'
      cyan:    '#7ec16e'
      white:   '#ebdbb2'

  gruvbox_dark: &gruvbox_dark
    primary:
      background:        '#1d2021'
      foreground:        '#f9f5d7'
      bright_foreground: '#f9f5d7'
      dim_foreground:    '#f2e5bc'
    cursor:
      text:   CellBackground
      cursor: CellForeground
    vi_mode_cursor:
      text:   CellBackground
      cursor: CellForeground
    selection:
      text:       CellBackground
      background: CellForeground
    bright:
      black:   '#928374'
      red:     '#fb4934'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#83a598'
      magenta: '#d3869b'
      cyan:    '#8ec07c'
      white:   '#ebdbb2'
    normal:
      black:   '#1d2021'
      red:     '#cc241d'
      green:   '#98971a'
      yellow:  '#d79921'
      blue:    '#458588'
      magenta: '#b16286'
      cyan:    '#689d6a'
      white:   '#a89984'
    dim:
      black:   '#32302f'
      red:     '#9d0006'
      green:   '#79740e'
      yellow:  '#b57614'
      blue:    '#076678'
      magenta: '#8f3f71'
      cyan:    '#427b58'
      white:   '#928374'
    indexed_colors:
      - { index: 16, color: '#dc9656' }
      - { index: 17, color: '#a16946' }
      - { index: 18, color: '#1d2021' }
      - { index: 19, color: '#383838' }
      - { index: 20, color: '#b8b8b8' }
      - { index: 21, color: '#e8e8e8' }

  gruvbox_light: &gruvbox_light
    primary:
      background: '#f9f5d7'
      foreground: '#3c3836'
    cursor:
      text: CellBackground
      cursor: CellForeground
    normal:
      black:   '#f9f5d7'
      red:     '#cc241d'
      green:   '#98971a'
      yellow:  '#d79921'
      blue:    '#458588'
      magenta: '#b16286'
      cyan:    '#689d6a'
      white:   '#7c6f64'
    bright:
      black:   '#928374'
      red:     '#9d0006'
      green:   '#79740e'
      yellow:  '#b57614'
      blue:    '#076678'
      magenta: '#8f3f71'
      cyan:    '#427b58'
      white:   '#3c3836'

  gruvbox_community: &gruvbox_community
    cursor:
      text: CellBackground
      cursor: CellForeground
    primary:
      background: '#000000'
      foreground: '#ebdbb2'
    normal:
      black:   '#282828'
      red:     '#cc241d'
      green:   '#98971a'
      yellow:  '#d79921'
      blue:    '#458588'
      magenta: '#b16286'
      cyan:    '#689d6a'
      white:   '#a89984'
    bright:
      black:   '#928374'
      red:     '#fb4934'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#83a598'
      magenta: '#d3869b'
      cyan:    '#8ec07c'
      white:   '#ebdbb2'

    indexed_colors:
      - { index: 16, color: '#dc9656' }
      - { index: 17, color: '#a16946' }
      - { index: 18, color: '#282828' }
      - { index: 19, color: '#383838' }
      - { index: 20, color: '#b8b8b8' }
      - { index: 21, color: '#e8e8e8' }

  drang: &drang
    primary:
      background: '#000000'
      foreground: '0xd4d4d5'
    cursor:
      text: '#ffffff'
      cursor: '#fc03f8'
    normal:
      black:   '0x000000'
      red:     '0xf87070'
      green:   '0x79dcaa'
      yellow:  '0xffe59e'
      blue:    '0x7ab0df'
      magenta: '0xc397d8'
      cyan:    '0x70c0ba'
      white:   '0xd4d4d5'
    bright:
      black:   '0x666666'
      red:     '0xf87070'
      green:   '0x79dcaa'
      yellow:  '0xffe59e'
      blue:    '0x7ab0df'
      magenta: '0xb77ee0'
      cyan:    '0x54ced6'
      white:   '0xffffff'


  base16_monodark: &base16_monodark
    primary:
      background: '#000000'
      foreground: '0xd8d8d8'

    # Colors the cursor will use if `custom_cursor_colors` is true
    cursor:
      text: CellBackground
      cursor: CellForeground

    # Normal colors
    normal:
      black:   '0x181818'
      red:     '0xab4642'
      green:   '0xa1b56c'
      yellow:  '0xf7ca88'
      blue:    '0x7cafc2'
      magenta: '0xba8baf'
      cyan:    '0x86c1b9'
      white:   '0xd8d8d8'

    # Bright colors
    bright:
      black:   '0x585858'
      red:     '0xab4642'
      green:   '0xa1b56c'
      yellow:  '0xf7ca88'
      blue:    '0x7cafc2'
      magenta: '0xba8baf'
      cyan:    '0x86c1b9'
      white:   '0xf8f8f8'

    indexed_colors:
    - { index: 16, color: '0xdc9656' }
    - { index: 17, color: '0xa16946' }
    - { index: 18, color: '0x282828' }
    - { index: 19, color: '0x383838' }
    - { index: 20, color: '0xb8b8b8' }

  base16_dark: &base16_dark
    primary:
      background: '0x181818'
      foreground: '0xd8d8d8'

    # Colors the cursor will use if `custom_cursor_colors` is true
    cursor:
      text: '0x181818'
      cursor: '0xd8d8d8'

    # Normal colors
    normal:
      black:   '0x181818'
      red:     '0xab4642'
      green:   '0xa1b56c'
      yellow:  '0xf7ca88'
      blue:    '0x7cafc2'
      magenta: '0xba8baf'
      cyan:    '0x86c1b9'
      white:   '0xd8d8d8'

    # Bright colors
    bright:
      black:   '0x585858'
      red:     '0xab4642'
      green:   '0xa1b56c'
      yellow:  '0xf7ca88'
      blue:    '0x7cafc2'
      magenta: '0xba8baf'
      cyan:    '0x86c1b9'
      white:   '0xf8f8f8'

    indexed_colors:
    - { index: 16, color: '0xdc9656' }
    - { index: 17, color: '0xa16946' }
    - { index: 18, color: '0x282828' }
    - { index: 19, color: '0x383838' }
    - { index: 20, color: '0xb8b8b8' }

  base16_light: &base16_light
    primary:
      background: '0xf5f5f5'
      foreground: '0x303030'

    # Colors the cursor will use if `custom_cursor_colors` is true
    cursor:
      text: '0xf5f5f5'
      cursor: '0x303030'

    # Normal colors
    normal:
      black:   '0xf5f5f5'
      red:     '0xac4142'
      green:   '0x90a959'
      yellow:  '0xf4bf75'
      blue:    '0x6a9fb5'
      magenta: '0xaa759f'
      cyan:    '0x75b5aa'
      white:   '0x303030'

    # Bright colors
    bright:
      black:   '0xb0b0b0'
      red:     '0xac4142'
      green:   '0x90a959'
      yellow:  '0xf4bf75'
      blue:    '0x6a9fb5'
      magenta: '0xaa759f'
      cyan:    '0x75b5aa'
      white:   '0x151515'

    indexed_colors:
    - { index: 16, color: '0xd28445' }
    - { index: 17, color: '0x8f5536' }
    - { index: 18, color: '0xe0e0e0' }
    - { index: 19, color: '0xd0d0d0' }
    - { index: 20, color: '0x505050' }
    - { index: 21, color: '0x202020' }
colors: *base16_dark

bell:
  animation: EaseOutExpo
  duration: 0
  color: '#ffffff'

# 0.85 if not light
background_opacity: 1

mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  url:
    launcher:
      program: google-chrome
      args:
        - --new-window
  hide_when_typing: false
  url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    modifiers: None

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"
  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

cursor:
  style: Block
  unfocused_hollow: true

live_config_reload: true

working_directory: None

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

debug:
  # Display the time it takes to redraw each frame.
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - Off
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Off

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Option
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad


key_bindings:
  - { key: V,        mods: Command,       action: Paste                        }
  - { key: C,        mods: Command,       action: Copy                         }
  - { key: Q,        mods: Command,       action: Quit                         }
  - { key: N,        mods: Command,       action: SpawnNewInstance             }
  - { key: Return,   mods: Command|Shift, action: ToggleFullscreen             }
  - { key: K,        mods: Command,       chars: "\x0c"                        }
  - { key: Home,                          chars: "\x1bOH",   mode: AppCursor   }
  - { key: Home,                          chars: "\x1b[H",   mode: ~AppCursor  }
  - { key: End,                           chars: "\x1bOF",   mode: AppCursor   }
  - { key: End,                           chars: "\x1b[F",   mode: ~AppCursor  }
  - { key: Equals,   mods: Command,       action: IncreaseFontSize             }
  - { key: Minus,    mods: Command,       action: DecreaseFontSize             }
  - { key: Minus,    mods: Command|Shift, action: ResetFontSize                }
  - { key: PageUp,   mods: Shift,         chars: "\x1b[5;2~"                   }
  - { key: PageUp,   mods: Control,       chars: "\x1b[5;5~"                   }
  - { key: PageUp,                        chars: "\x1b[5~"                     }
  - { key: PageDown, mods: Shift,         chars: "\x1b[6;2~"                   }
  - { key: PageDown, mods: Control,       chars: "\x1b[6;5~"                   }
  - { key: PageDown,                      chars: "\x1b[6~"                     }
  - { key: Left,     mods: Shift,         chars: "\x1b[1;2D"                   }
  - { key: Left,     mods: Control,       chars: "\x1b[1;5D"                   }
  - { key: Left,                          chars: "\x1b[D",   mode: ~AppCursor  }
  - { key: Left,                          chars: "\x1bOD",   mode: AppCursor   }
  - { key: Right,    mods: Shift,         chars: "\x1b[1;2C"                   }
  - { key: Right,    mods: Control,       chars: "\x1b[1;5C"                   }
  - { key: Right,                         chars: "\x1b[C",   mode: ~AppCursor  }
  - { key: Right,                         chars: "\x1bOC",   mode: AppCursor   }
  - { key: Up,       mods: Shift,         chars: "\x1b[1;2A"                   }
  - { key: Up,       mods: Control,       chars: "\x1b[1;5A"                   }
  - { key: Up,       mods: Alt,           chars: "\x1b[1;3A"                   }
  - { key: Up,                            chars: "\x1b[A",   mode: ~AppCursor  }
  - { key: Up,                            chars: "\x1bOA",   mode: AppCursor   }
  - { key: Down,     mods: Shift,         chars: "\x1b[1;2B"                   }
  - { key: Down,     mods: Control,       chars: "\x1b[1;5B"                   }
  - { key: Down,     mods: Alt,           chars: "\x1b[1;3B"                   }
  - { key: Down,                          chars: "\x1b[B",   mode: ~AppCursor  }
  - { key: Down,                          chars: "\x1bOB",   mode: AppCursor   }
  - { key: Tab,      mods: Shift,         chars: "\x1b[Z"                      }
  - { key: F1,                            chars: "\x1bOP"                      }
  - { key: F2,                            chars: "\x1bOQ"                      }
  - { key: F3,                            chars: "\x1bOR"                      }
  - { key: F4,                            chars: "\x1bOS"                      }
  - { key: F5,                            chars: "\x1b[15~"                    }
  - { key: F6,                            chars: "\x1b[17~"                    }
  - { key: F7,                            chars: "\x1b[18~"                    }
  - { key: F8,                            chars: "\x1b[19~"                    }
  - { key: F9,                            chars: "\x1b[20~"                    }
  - { key: F10,                           chars: "\x1b[21~"                    }
  - { key: F11,                           chars: "\x1b[23~"                    }
  - { key: F12,                           chars: "\x1b[24~"                    }
  - { key: Back,                          chars: "\x7f"                        }
  - { key: Back,     mods: Alt,           chars: "\x1b\x7f"                    }
  - { key: Insert,                        chars: "\x1b[2~"                     }
  - { key: Delete,                        chars: "\x1b[3~"                     }
  - { key: Left,     mods: Alt,           chars: "\x1bb"                       }
  - { key: Right,    mods: Alt,           chars: "\x1bf"                       }
  - { key: Left,     mods: Command,       chars: "\x1bOH",   mode: AppCursor   } # Home
  - { key: Right,    mods: Command,       chars: "\x1bOF",   mode: AppCursor   } # End
